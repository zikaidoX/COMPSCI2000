// Initializes this, that, and argument pointers
push constant 0
pop pointer 0
push constant 300
pop pointer 1
push argument 0
pop pointer 2

// Load x and y into the stack
push static 0
push static 1

// Set up loop counter
push constant 0
pop local 3

// Loop to calculate x * y
(loopStart)
  // Check if the loop counter is equal to y - 1
  push local 3
  push static 1
  sub
  eq

  // If equal, jump to end of loop
  if-goto loopEnd

  // Add x to the result
  push local 2
  push static 0
  add
  pop local 2

  // Increment the loop counter
  push local 3
  push constant 1
  add
  pop local 3

  // Jump back to the start of the loop
  goto loopStart

(loopEnd)
// Set the result to the local variable a
push local 2
pop local 0

// End of multiplication algorithm
label END
