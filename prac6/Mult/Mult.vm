//Set initial states.
push constant 0
pop local 0 //Result begins at 0.
push constant 1
pop local 1 //Negative state begins at a non-zero value, representing no negative.

//If x is zero, skip to end.
push static 0
if-goto CONTINUE
goto END
label CONTINUE

//If y is negative, negate it and store this information.
push static 1
push constant 0
lt
if-goto NEGATE_Y

//Main Loop
label LOOP
//Exit Loop Condition
push static 1
if-goto CHECK_NEGATIVE

//Add x to a.
push static 0
push local 0
add
pop local 0

//Decrement Y and loop.
push static 1
push constant 1
sub
pop static 1
goto LOOP

label CHECK_NEGATIVE
push local 1 //Checks local 1, which holds the negative state. If the negative state is 0, it will skip the if-goto statement.
if-goto END
push local 0
neg
pop local 0 //Local 0 is now negated.

//End
label END
goto END

//Negates y
label NEGATE_Y
push static 1
neg
pop static 1 //Makes static 1 (y) positive.
push constant 0
pop local 1 //Sets negative state to 0 (false).
goto LOOP